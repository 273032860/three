/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef,useLayoutEffect } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from 'three'
import { Environment, ContactShadows, OrbitControls, PerspectiveCamera, TransformControls} from '@react-three/drei'


export default function Huojianjsx({ ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/f8.glb");


  useLayoutEffect(() => {
    console.log(materials)
    materials['窗'].roughness = 0.0
    materials['窗'].opacity = 0.6
    materials['窗'].color = new THREE.Color('white')
    // materials['930_lights'].emissiveIntensity = 50
    // materials['930_tire'].color.set('black')
    // materials['930_tire'].roughness = 0.7
  }, [materials])

  

  return (
    <>
     {/* <Environment files="/rolling_hills_2k.hdr" ground={{ height: 32, radius: 130 }} /> */}
     
    <group ref={group} {...props} dispose={null}  >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.立方体.geometry}
        material={materials["1"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.立方体_1.geometry}
        material={materials.头}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.立方体_2.geometry}
        material={materials.上下环}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.喷射口.geometry}
        material={materials.头}
        position={[0, -1.684, 0]}
        scale={0.562}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.机翼.geometry}
        material={materials.角}
        position={[0, -0.039, 0]}
        rotation={[Math.PI / 2, 0, Math.PI]}
        scale={0.571}
      />
      <group
        position={[0, -1.341, 0]}
        rotation={[0, Math.PI / 6, 0]}
        scale={0.071}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.球体003.geometry}
          material={materials.小球}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.球体003_1.geometry}
          material={nodes.球体003_1.material}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.喷射器.geometry}
        material={nodes.喷射器.material}
        position={[0, -2.117, 0]}
        scale={0.901}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.窗环.geometry}
        material={materials["2"]}
        rotation={[1.748, 0, Math.PI]}
        scale={0.281}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.窗.geometry}
        material={materials.窗}
        rotation={[1.738, 0, Math.PI]}
        scale={0.255}
      />
    </group>
    {/* <TransformControls object={group} makeDefault/> */}
      <hemisphereLight color="white" groundColor="red" intensity={0.75} />
      <spotLight position={[50, 50, 10]} angle={0.15} penumbra={1} />
      <pointLight/>
      </>
  );
}

useGLTF.preload("/f8.glb");
